[versions]
androidApplication = "8.2.2"
coreSplashscreen = "1.0.1"
kotlinAndroid = "1.9.21"
kotlinJvm = "1.9.20"
kotlinSerialization = "1.9.21"
protobufGradlePlugin = "0.9.4"
timber = "5.0.1"
spotless = "6.19.0"
minSdk = "26"
compileSdk = "34"
gradle = "8.2.2"
composeBom = "2024.01.00"
composeCompiler = "1.5.4"
kotlinGradlePlugin = "1.9.20"
ksp = "1.9.21-1.0.15"
gradleVersionsPlugin = "0.50.0"
ktorClientAndroid = "2.3.5"
ktorClientContentNegotiation = "2.3.5"
ktorClientLogging = "2.3.5"
ktor = "2.3.7"
retrofit = "2.9.0"
room = "2.6.1"
protobuf = "3.25.0"

dataStore = "1.0.0"
composeNavigation = "2.7.6"
hiltComposeNavigation = "1.1.0"
kotlinCoroutines = "1.7.3"
accompanist = "0.32.0"
activityCompose = "1.8.2"
appCompat = "1.6.1"
composeConstraintLayout = "1.0.1"
ktxCore = "1.12.0"
material = "1.11.0"
lifecycle = "2.7.0"
hilt = "2.50"
junit = "4.13.2"
espresso = "3.5.1"
androidxTest = "1.1.5"
googleTruth = "1.1.4"
sortDependencies = "0.4"
moshi = "1.15.0"
paparazzi = "1.3.1"
detektGradlePlugin = "1.23.4"
leakCanary = "2.12"
ktlint = "1.0.1"
kotlinter = "4.0.0"
dokkaVersion = '1.9.10'

[libraries]
androidx-core-splashscreen = { module = "androidx.core:core-splashscreen", version.ref = "coreSplashscreen" }
compose-bom = { group = "androidx.compose", name = "compose-bom", version.ref = "composeBom" }
kotlin-gradle-plugin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlinGradlePlugin" }
#ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
gradle = { module = "com.android.tools.build:gradle", version.ref = "gradle" }
gradle-versions-plugin = { module = "com.github.ben-manes:gradle-versions-plugin", version.ref = "gradleVersionsPlugin" }


ktor-client-core = { group = "io.ktor", name = "ktor-client-core", version.ref = "ktor" }
ktor-client-android = { group = "io.ktor", name = "ktor-client-android", version.ref = "ktor" }
ktor-client-cio = { group = "io.ktor", name = "ktor-client-cio", version.ref = "ktor" }
ktor-client-logging = { group = "io.ktor", name = "ktor-client-logging", version.ref = "ktor" }
ktor-client-content-negotiation = { group = "io.ktor", name = "ktor-client-content-negotiation", version.ref = "ktor" }
ktor-serialization = { group = "io.ktor", name = "ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-auth = { group = "io.ktor", name = "ktor-client-auth", version.ref = "ktor" }
ktor-client-mock = { group = "io.ktor", name = "ktor-client-mock", version.ref = "ktor" }
protobuf-kotlinLite = { module = "com.google.protobuf:protobuf-kotlin-lite", version.ref = "protobuf" }
protobuf-javaLite = { module = "com.google.protobuf:protobuf-javalite", version.ref = "protobuf" }
protobuf-protoc = { module = "com.google.protobuf:protoc", version.ref = "protobuf" }

protobuf-gradle-plugin = { module = "com.google.protobuf:protobuf-gradle-plugin", version.ref = "protobufGradlePlugin" }
square-retrofit = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit" }
square-retrofit-converter-moshi = { module = "com.squareup.retrofit2:converter-moshi", version.ref = "retrofit"}
square-moshi-kotlin = { module = "com.squareup.moshi:moshi-kotlin", version.ref = "moshi" }
square-moshi-kotlin-codegen = { module = "com.squareup.moshi:moshi-kotlin-codegen", version.ref = "moshi" }
androidx-room-compiler = { module = "androidx.room:room-compiler", version.ref = "room" }
androidx-room-runtime = { module = "androidx.room:room-runtime", version.ref = "room" }

datastore = { group = "androidx.datastore", name = "datastore", version.ref = "dataStore" }
androidx-compose-navigation = { group = "androidx.navigation", name = "navigation-compose", version.ref = "composeNavigation" }
androidx-hilt-compose-navigation = { group = "androidx.hilt", name = "hilt-navigation-compose", version.ref = "hiltComposeNavigation" }
kotlin-coroutines = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-core", version.ref = "kotlinCoroutines" }
accompanist-systemuicontroller = { module = "com.google.accompanist:accompanist-systemuicontroller", version.ref = "accompanist" }
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "activityCompose" }
androidx-appcompat = { module = "androidx.appcompat:appcompat", version.ref = "appCompat" }
compose-material-icons-extended = { group = "androidx.compose.material", name = "material-icons-extended" }
compose-material3 = { group = "androidx.compose.material3", name = "material3" }
compose-ui = { group = "androidx.compose.ui", name = "ui" }
androidx-compose-ui-graphics = { group = "androidx.compose.ui", name = "ui-graphics" }
compose-ui-tooling = { group = "androidx.compose.ui", name = "ui-tooling" }
compose-ui-tooling-preview = { group = "androidx.compose.ui", name = "ui-tooling-preview" }
compose-ui-util = { group = "androidx.compose.ui", name = "ui-util" }
androidx-compose-constraintlayout = { group = "androidx.constraintlayout", name = "constraintlayout-compose", version.ref = "composeConstraintLayout" }
androidx-core-ktx = { module = "androidx.core:core-ktx", version.ref = "ktxCore" }
android-material = { module = "com.google.android.material:material", version.ref = "material" }
androidx-lifecycle-runtime-ktx = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version.ref = "lifecycle" }
hilt-android = { module = "com.google.dagger:hilt-android", version.ref = "hilt" }
hilt-android-compiler = { module = "com.google.dagger:hilt-android-compiler", version.ref = "hilt" }
hilt-android-testing = { module = "com.google.dagger:hilt-android-testing", version.ref = "hilt" }
hilt-compiler = { module = "com.google.dagger:hilt-compiler", version.ref = "hilt" }
hilt-plugin = { module = "com.google.dagger:hilt-android-gradle-plugin", version.ref = "hilt" }
junit = { group = "junit", name = "junit", version.ref = "junit" }
androidx-test-junit = { module = "androidx.test.ext:junit", version.ref = "androidxTest" }
androidx-test-espresso-core = { module = "androidx.test.espresso:espresso-core", version.ref = "espresso" }
compose-ui-test-junit = { group = "androidx.compose.ui", name = "ui-test-junit4" }
compose-ui-test-manifest = { group = "androidx.compose.ui", name = "ui-test-manifest" }
google-truth = { group = "com.google.truth", name = "truth", version.ref = "googleTruth" }
detekt-gradle-plugin = { module = "io.gitlab.arturbosch.detekt:detekt-gradle-plugin", version.ref = "detektGradlePlugin" }
spotless = { group = "com.diffplug.spotless", name = "spotless-plugin-gradle", version.ref = "spotless" }
timber = { group = "com.jakewharton.timber", name = "timber", version.ref = "timber" }
javax-inject = { group = "javax.inject", name = "javax.inject", version = "1" }
square-leakcanary = { module = "com.squareup.leakcanary:leakcanary-android", version.ref = "leakCanary" }
dokkaDocumentation= {module = "org.jetbrains.dokka:android-documentation-plugin", version.ref = "dokkaVersion"}
dokka-gradle-plugin= {module = "org.jetbrains.dokka:dokka-gradle-plugin", version.ref = "dokkaVersion"}

[plugins]
android-application = { id = "com.android.application", version.ref = "androidApplication" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlinAndroid" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
ktlint = { id = "org.jlleitschuh.gradle.ktlint", version.ref = "ktlint" }
paparazzi = { id = "app.cash.paparazzi", version.ref = "paparazzi" }
detektGradlePlugin = { id = "io.gitlab.arturbosch.detekt", version.ref = "detektGradlePlugin" }
kotlinter = { id = "org.jmailen.kotlinter", version.ref = "kotlinter" }
spotless = { id = "com.diffplug.spotless", version.ref = "spotless" }
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlinJvm" }
sortDependencies = { id = "com.squareup.sort-dependencies",  version.ref = "sortDependencies" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlinSerialization" }
hilt = { id = "com.google.dagger.hilt.android", version.ref = "hilt" }
protobuf = { id = "com.google.protobuf", version.ref = "protobufGradlePlugin" }
androidLibrary = { id = "com.android.library", version.ref = "androidApplication" }
dokka= {id = "org.jetbrains.dokka", version.ref = "dokkaVersion"}


